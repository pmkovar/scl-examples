CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

PROJECT (myproject)

SET(FOO_VERSION_MAJOR 4)
SET(FOO_VERSION_MINOR 2)
SET(FOO_VERSION_PATCH 1)

SET(INSTALL_BINDIR "bin")
SET(INSTALL_SBINDIR "sbin")
SET(INSTALL_LIBEXECDIR "libexec")
SET(INSTALL_DATADIR "share")

IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
  SET(INSTALL_LIBDIR "lib64")
ELSE()
  SET(INSTALL_LIBDIR "lib")
ENDIF()

SET(INSTALL_UNITDIR "/usr/lib/systemd/system")

SET(prefix "${CMAKE_INSTALL_PREFIX}")
SET(libexecdir "${CMAKE_INSTALL_PREFIX}/${INSTALL_LIBEXECDIR}")
SET(bindir "${CMAKE_INSTALL_PREFIX}/${INSTALL_BINDIR}" )
SET(sbindir "${CMAKE_INSTALL_PREFIX}/${INSTALL_SBINDIR}")
SET(libdir "${CMAKE_INSTALL_PREFIX}/${INSTALL_LIBDIR}")
SET(datadir "${CMAKE_INSTALL_PREFIX}/${INSTALL_DATADIR}")


# files for systemd
SET(APP_SCRIPTS
  foo-daemon.service
  foo-daemon
  foo-run
)

FOREACH(file ${APP_SCRIPTS})
  IF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${file}.sh)
    CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/${file}.sh
      ${CMAKE_CURRENT_BINARY_DIR}/${file} ESCAPE_QUOTES @ONLY)
  ELSEIF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${file}.in)
    CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/${file}.in
      ${CMAKE_CURRENT_BINARY_DIR}/${file} ESCAPE_QUOTES @ONLY)
  ELSE()
    MESSAGE(FATAL_ERROR "Can not find ${file}.sh or ${file}.in in "
      "${CMAKE_CURRENT_SOURCE_DIR}" )
  ENDIF()
ENDFOREACH()

install (FILES foo-daemon.service DESTINATION ${INSTALL_UNITDIR})
install (FILES foo-daemon foo-run DESTINATION "${CMAKE_INSTALL_PREFIX}/${INSTALL_BINDIR}")

